AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template to create an EC2 instance with security group, VPC/subnet selection, and instance type dropdown.

Parameters:
  InstanceName:
    Type: String
    Description: The name of the EC2 instance
    Default: "MyEC2Instance"

  AMI:
    Type: AWS::EC2::Image::Id
    Description: The AMI to use for the EC2 instance

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: VPC to launch the EC2 instance in
    Default: ""  

  Subnet:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet to place the EC2 instance in
    Default: ""

  SecurityGroupPort:
    Type: Number
    Description: The port for SecurityGroup access, SG WILL NOT BE RETAIN IF DELETE
    Default: 22

  SecurityGroupSourceCIDR:
    Type: String
    Description: The CIDR block for SecurityGroup access, SG WILL NOT BE RETAIN IF DELETE
    Default: "0.0.0.0/0"

  InstanceType:
    Type: String
    Description: The EC2 instance type
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t3.micro
      - t3.small
      - t3.medium
    Default: t2.micro

Resources:

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security group for EC2 instance"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: !Ref SecurityGroupPort
          ToPort: !Ref SecurityGroupPort
          CidrIp: !Ref SecurityGroupSourceCIDR 
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: "0.0.0.0/0"  


  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref AMI
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      SubnetId: !Ref Subnet
      Tags:
        - Key: Name
          Value: !Ref InstanceName

Outputs:
  InstanceId:
    Description: "ID of the EC2 instance"
    Value: !Ref EC2Instance

  SecurityGroupId:
    Description: "ID of the Security Group"
    Value: !Ref InstanceSecurityGroup
